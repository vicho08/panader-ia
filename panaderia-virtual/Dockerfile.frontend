# --- Etapa 1: Construcción de la aplicación React ---
FROM node:18-alpine as build-stage

# Establece el directorio de trabajo dentro del contenedor
WORKDIR /app

ARG REACT_APP_BACKEND_API_URL

ENV REACT_APP_BACKEND_API_URL=$REACT_APP_BACKEND_API_URL

# Copia package.json y package-lock.json para instalar dependencias primero
# Esto ayuda a aprovechar el cache de Docker si las dependencias no cambian
COPY package*.json ./

# Instala las dependencias
RUN npm install

# Copia el resto del código fuente de la aplicación
COPY . .

# Construye la aplicación React para producción
# Esto creará una carpeta 'build' con los archivos estáticos optimizados
RUN npm run build

# --- Etapa 2: Servir la aplicación con Nginx ---
FROM nginx:alpine as serve-stage

# Copia los archivos de construcción desde la etapa anterior al directorio de Nginx
COPY --from=build-stage /app/build /usr/share/nginx/html

# Elimina la configuración por defecto de Nginx y copia la nuestra
# Cloud Run usa el puerto 8080 por defecto
RUN rm /etc/nginx/conf.d/default.conf
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expone el puerto por defecto de Nginx
EXPOSE 8080

# Comando para iniciar Nginx
CMD ["nginx", "-g", "daemon off;"]